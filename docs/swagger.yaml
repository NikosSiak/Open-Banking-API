definitions:
  models.User:
    properties:
      email:
        type: string
      password:
        type: string
      phone_number:
        type: string
    required:
    - email
    - password
    - phone_number
    type: object
  models.UserLoginCredentials:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  responses.AddAlphaBankAccountResponse:
    properties:
      uri:
        example: https://gw.api.alphabank.eu/sandbox/auth/authorize
        type: string
    type: object
  responses.LoginResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
      sid:
        type: string
    type: object
  responses.SuccessResponse:
    properties:
      message:
        example: success
        type: string
    type: object
  responses.TokenResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  responses.UnauthorizedError:
    properties:
      message:
        example: Missing or Invalid token
        type: string
    type: object
  utils.HTTPError:
    properties:
      message:
        example: something went wrong
        type: string
    type: object
info:
  contact: {}
  title: Open Banking Demo
  version: "1.0"
paths:
  /login:
    post:
      description: If the user has enabled TwoFa the result will have a verification
        ID for the verify route, else the access and refresh tokens are returned
      parameters:
      - description: User credentials
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.UserLoginCredentials'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.LoginResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Get access and refresh tokens for user
      tags:
      - User
  /logout:
    post:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SuccessResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/responses.UnauthorizedError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.HTTPError'
      security:
      - BearerAuth: []
      summary: Invalidate User tokens
      tags:
      - User
  /register:
    post:
      parameters:
      - description: User info
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.User'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.LoginResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Register a new User
      tags:
      - User
  /v1/accounts/alpha:
    post:
      description: Use the URI to open AlphaBank's login page
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.AddAlphaBankAccountResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/responses.UnauthorizedError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.HTTPError'
      security:
      - BearerAuth: []
      summary: Authorize the use of the user's AlphaBank account
      tags:
      - Accounts
  /verify:
    post:
      parameters:
      - description: Verification ID provided by login
        in: query
        name: sid
        required: true
        type: string
      - description: TwoFactor authentication code
        in: query
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.TokenResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Verify a user login with a twofa code
      tags:
      - User
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
